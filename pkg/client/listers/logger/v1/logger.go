/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/zeroFruit/operator-demo/pkg/apis/logger/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// LoggerLister helps list Loggers.
type LoggerLister interface {
	// List lists all Loggers in the indexer.
	List(selector labels.Selector) (ret []*v1.Logger, err error)
	// Loggers returns an object that can list and get Loggers.
	Loggers(namespace string) LoggerNamespaceLister
	LoggerListerExpansion
}

// loggerLister implements the LoggerLister interface.
type loggerLister struct {
	indexer cache.Indexer
}

// NewLoggerLister returns a new LoggerLister.
func NewLoggerLister(indexer cache.Indexer) LoggerLister {
	return &loggerLister{indexer: indexer}
}

// List lists all Loggers in the indexer.
func (s *loggerLister) List(selector labels.Selector) (ret []*v1.Logger, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.Logger))
	})
	return ret, err
}

// Loggers returns an object that can list and get Loggers.
func (s *loggerLister) Loggers(namespace string) LoggerNamespaceLister {
	return loggerNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// LoggerNamespaceLister helps list and get Loggers.
type LoggerNamespaceLister interface {
	// List lists all Loggers in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.Logger, err error)
	// Get retrieves the Logger from the indexer for a given namespace and name.
	Get(name string) (*v1.Logger, error)
	LoggerNamespaceListerExpansion
}

// loggerNamespaceLister implements the LoggerNamespaceLister
// interface.
type loggerNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Loggers in the indexer for a given namespace.
func (s loggerNamespaceLister) List(selector labels.Selector) (ret []*v1.Logger, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.Logger))
	})
	return ret, err
}

// Get retrieves the Logger from the indexer for a given namespace and name.
func (s loggerNamespaceLister) Get(name string) (*v1.Logger, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("logger"), name)
	}
	return obj.(*v1.Logger), nil
}
